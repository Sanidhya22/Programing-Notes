                                       JavaScipt
          ---------------------------------------------------------------------------------                             
 
    What is JavaScript ?
->  JavaScript is a programming language used both on the client-side and server-side
    that allows us to make our web pages interactive.
     
    Note  - 
    JavaScript is Synchronous Single threaded language

    What are the different datatypes we have in JavaScript ?
->  There are mainly two types of datatypes in JavaScript
    1.Primitive Type
      1. Number
      2. String
      3. Boolean
      4. Undefined 
      5. Null
      6. Symbol
    2. Reference Type
      1. Object
      2. Array
      3. Function
      4. Date

    What do you mean by Objects ?
->  A JavaScript object is an entity having state and behavior (properties and method).
    Datas in the object are stored in the key value pairs.

    What are the different Web APIs we get along with the browser ?
->  1. fetch API
    2. DOM API
    3. Web Workers API
    4. Web Storage API
    5. Geolocation API 
   
    What are the different ways in which JavaScript Object can be created ?
->  JavaScipt Objects can be Created by Following ways --

    Case 1. Using Object Constructor --  
     const e1 = new Object();
     e1.name = "Sujit";
     e1.age =  23;

    Case 2. Using Functional Constructor / Class Constructor --
      function Emp(name, age)
     {
         this.name = name;
         this.age =  age;
     }
     const e1 = new Emp("Suman",33,4500,"Progammer");
     console.log(e1.name);

    Case 3. Using Object Literal Syntax: --
     const e1 = {};
     e1.name = "Sujit";
     e1.age =  23;

   What do you mean by JavaScript Arrays ?   
-> JavaScript Array - It is a collection of ELements of Different datatypes types.

   There are Following ways through which we can create Arrays --

   Case 1. Array Literal Syntax 
           var arr = [];
           arr[0] = "Rajesh";
           arr[1] = 32;
           console.log(arr);

   Case 2. By Using Array Constructor
           var arr2 = new Array("Suman",32,2500,"SOftware Engineer");
           console.log(arr2);

   Case 3. Using the Array.from() 
           const arr3 = Array.from([1, 2, 3, 4, 5]);
           console.log(arr3);
   
   What do you mean by Babel?
-> Babel is a javascript Compiler. Babel is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of
   JavaScript in browsers environments.

   What do you mean by Webpack?
-> Webpack is a module bundler for modern JavaScript applications.
   It is used to bundle assets, such as JavaScript files, CSS stylesheets, images, and fonts, into a 
   single output file or multiple files that can be efficiently served to browsers.

   What do you mean by Use Strict ?
-> "use strict" Defines that JavaScript code should be executed in "strict mode".
   Strict mode makes it easier to write "secure" JavaScript Code.
   Strict mode changes previously accepted "bad syntax" into real errors.

   What are the different types of scopes in JavaScript ?
-> There are two types of scopes in JavaScript
    1.Based on Accessibility - 
      1.Global
      2.local
    2.Based on Methodology - 
      1.Lexical
      2.Dynamic

   What do you mean by Global Scope in JavaScript ?
-> Global scope refers to the outermost scope that encompasses all other scopes. 

   What do you mean by Block Scope ?
-> Block scope refers to the visibility and lifetime of variables declared within {} braces.

   What do you mean by Shadowing in JavaScipt ?
-> Shadowing in javascript happens when a variable declared in a certain scope (e.g. 
   a local variable) has the same name as a variable in the outer scope (e.g. a global variable).    

    What do you mean by Function Statement ?
->  Function defined with parameters or without parameters is known as Function Statement.

    function show(){
        console.log("Sujit Kumar Verma");
    }                      

    What do you mean by Function Expression ?
->  Creating a function and assigning it to a variable is known as Function Expression.

    var res = function (){
        console.log("Result");
    }

    What do you mean by Anonymous Functions ?
->  Functions Declared without names are known as Anonymous Functions.  

    Anonymous function don't exist standalone It will give us error 
    Anonymous Functions are passed as parameter to a function or they are returned from a function.

    show(function(){
        console.log("Hello");
    })

    What is the Difference between Function Statment and Function Expression ?
->  In case of Hoisting Concept     

    function show(){
        console.log("Sujit Kumar Verma");
    } 

    const res = function (){
        console.log("Result");
    }

    If we call function show before Defining it will execute successfully and will give the result.
    but In case of function res it will give reference error Cannot access 'res' before initialization.


    What do you mean by Named Function Expression ?
->  Function defined with name assigned to any variable is known as Named Function.
    Expression.     

    var result = function show(){
        console.log("Sujit Kumar Vemra");
    }
    show(); Error
    result();

    Here This is will give error because the reference of the function of the is asssigned to a variable 
    result and show does not point to that function in the global context anymore.

    What do you mean by First Class Functions ?
->  Those functions which has the ability to be used as values , they can be passed as parameter to a function
    or can be returned from another function, these functions are called as First Class Functions.

    What do you mean by Arrow functions ?
->  Arrow function is one of the features introduced in the ES6 version of JavaScript. It allows us to 
    create functions in a cleaner way compared to regular functions. It cannot exist standalone. 

    What is the Difference between Syntax Error, Reference Error and Type Error ?
->  Syntax Error -
    Syntax Errors are the Errors which will get Trigerd because of Syntax Errors
    In case of Syntax Errors None of the code will get executed.

    Reference Error -
    Reference errors in Javascript are mainly thrown when an attempt is made to access a variable that 
    does not exist in memory or is out of scope.
    In case of Reference Error the code will get executed.

    Type Error -
    Type errors we get because of type issues.  

    What do you mean by SetTimeout ?
->  setTimeout() Function executes a function or a code snippet after specified time Interval.
    Here Callback functions are registered in the timer Queue. 

    What do you mean by ClearTimeout ?
->  The clearTimeout() method clears a timer set with the setTimeout() method.
    Here function executions will not happen. 

    What do you mean by SetInterval ?
->  SetInterval Functon repeatedly calls a function or executes a code snippet, with a fixed time 
    delay between each call.

    What do you mean by ClearInterval ?
->  The clearInterval() method clears a timer set with the setInterval() method.
    Here function executions will not happen. 

    What do you mean by SetImmediate Function ?
->  The setImmediate() method executes a callback function right after all the statements in the scripts 
    are executed.
    Here Callback functions are registered in the check Handler Queue. 
    
    Those functions who are registered in the timer queue has high Priorty than those functions who are 
    registered with the check Handler queue.

    What do you mean by Process.nextTick Function ?
->  process.nextTick() is used to schedule a callback function to be invoked at the begining 
    of the next iteration of the eventLoop.    

    What are the states of Promises in ES6?   
->  Promises mainly possess three states as follows:

    Pending: This refers to the initial state of every promise. It indicates that the result 
    has not yet been computed.
    Fulfilled: It refers to the completion of a task.
    Rejected: It indicates the failure that arises during computation. 

    What is the difference between for..of and for..in?
->  for in -  It Loops through the Properties or indexes.
    for of -  It Loops through the Values.

    What is the difference between Callback and Promises ?
->               Promises                          |                 Callback
    ------------------------------------------------------------------------------------------------------
    1. Promise is an Object.                             1. Callback is a function which is being passed 
                                                            as an argument to another function.

    2. Promise has higher Priorty than Callback          2. Callback has lower Priorty than Promises 
       for Execution because they are stored in the         because they are Stored in the Callback
       MacroTask Queue.                                     Queue.                                                       

    What do you mean by Callback Hell ?
->  Callback hell refers to the situation that arises when working with asynchronous code in JavaScript, 
    it is a nesting multiple levels of callbacks inside one another. This nesting can quickly lead to 
    code that is difficult to read, understand, and maintain due to its deeply nested structure. 

    getDataFromAPI1(function(data1) {
      // Handle data from API 1
      getDataFromAPI2(function(data2) {
         // Handle data from API 2
         getDataFromAPI3(function(data3) {
            // Handle data from API 3
            // More nested callbacks...
         });
      });
    });

    What is the difference between const and Object Freeze ?
->  Const property means that we cannot do the reassignment of the variable or object but can modify the 
    properties of the object.
    Object.freeze methods means that we cannot modify the values of properties of the object.      

    What do you mean Object.preventExtensions ?
->  This methods prevents from adding new properties to an object.

    What do you mean by Object.freeze ?
->  The Object.freeze() method freezes an object that prevents new properties from being added to it. 
    This method prevents the modification of existing property and values.   

    What do you mean by Object.Seal in JavaScript ?
->  The Object.seal() method of JavaScript seals an object which prevents new properties from being 
    added to it and marks all existing properties as non-configurable. The object to be sealed is 
    passed as an argument, and the method returns the object which has been sealed.     

    Why It is suggested to Specify the JavaScript Script in the end of the body tag instead of 
    head tag ?
->  It is being suggested beacuse there might be some script that will take to load so it might
    effect rendering of the page in case of specifing it in head tag whereas in case of end of the 
    body tag the scripts will loaded at the end so it will not effect the rendering of the page.
    
    What is the Difference between Functional programming and Object Oriented programming ?
->                         FP                         |                          OOP
   ------------------------------------------------------------------------------------------------------------
   1. FP is based on the concepts of functions.           1. OOP is based on the concept of objects.
   2. It follows declarative programming model.           2. It follows imperative programming model.
   3. It supports parallel programming.                   3. It does not supports parallel programming.
   4. In FP statements can execute in any order.          4. In OOP statements should be executed in particular order.
   5. FP uses immutable data.                             5. OOP uses mutable data. 

   Note --
   Parallel programming in JavaScript involves executing multiple tasks simultaneously to improve performance
   and take advantage of multi-core processors. JavaScript uses techniques such as Web Workers, SharedArrayBuffer,
   and SIMD to support parallel programming.

   Declarative programming is a programming paradigm that focuses on describing what should be accomplished, 
   rather than how to accomplish it.

   Imperative programming is a programming paradigm that focuses on describing the step-by-step instructions 
   for achieving a particular outcome.

   What is the difference between prototype and proto ?
-> [[Prototype]] is a hidden private property that all objects have in Javascript, it holds a reference to the 
   object’s prototype.

   __proto__  is a property of Object.prototype that exposes the hidden [[Prototype]] property of an object 
   and allows us to access or modify it.
    





 


