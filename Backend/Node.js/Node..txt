   What do you mean by Node.js ?
-> Node.js is a web application framework built on Google Chrome's JavaScript Engine (V8Engine).
   Node.js comes with runtime environment on which a Javascript based script can be interpreted and
   executed.
   This runtime allows to execute a JavaScript code on any machine outside a browser. Because of this runtime 
   of Node.js, JavaScript is now can be executed on server as well.

   Node.js = Runtime Environment + JavaScript Library   


   How does Node.js works ?
->
                                          |---> Blocking Operations ---> Thread Pool --->   External Resources
                                          |<---                     <---             <---      Database
                                          |                                                  File System
                                          |                                                  Computation
                                          |
   Request ->  Event Queue -> Event Loop -->
                           <-            <--
                                          |
                                          |
                                          |--->
                                           <--- Non Blocking Operations


   Clients send requests to the webserver to interact with the web application. Requests can be non-blocking or 
   blocking: like Querying for data, Deleting data, Updating the data.
   Node.js retrieves the incoming requests and adds those to the Event Queue.
   The requests are then passed one-by-one through the Event Loop. It checks if the requests are simple enough 
   not to require any external resources.
   Then The Event Loop processes simple requests (non-blocking operations), such as I/O Polling, and returns the 
   responses to the corresponding clients.
   If the request is Blocking Operation then a single thread from the Thread Pool is assigned to a single complex 
   request. This thread is responsible for completing a particular blocking request by accessing external 
   resources, such as computation, database, file system, etc.
   Note - threadPool is having a single thread so whenever it reecives a new request then child thread 
          from that single thread will get assigned to that request.
          
   Once the task is carried out completely, the response is sent to the Event Loop that sends that response 
   back to the client.               

   What are the benefits of using Node.js ?
-> These are the few benefits of using Node.js 

   1> Single threaded and highly scalable -- Node.js uses a single threaded model with event looping. Event 
   looping mechanism helps server to respond in a non-blocking ways and makes server highly scalable as opposed to 
   traditional servers which create limited threads to handle requests. Node.js uses a single threaded program 
   and same program can services much larger number of requests than traditional server like Apache HTTP Server.

   2> Aynchronous and Event Driven - All APIs of Node.js library are asynchronous that is non blocking. It 
   essentially means a Node.js based server never waits for a API to return data. Server moves to next API 
   after calling it and a notification mechanism of Events of Node.js helps server to get response from the 
   previous API call.

   3> Very Fast - Being built on Google Chrome's V8 JavaScript Engine, Node.js library is very fast
   in code execution.

   4> No Buffering - Node.js applications never buffer any data. These applications simply output
   the data in chunks.

   What are the pros and cons of Node.js ?
->                               Node.js Pros             |                   Node.js Cons      

    1. Fast processing and an event-based model.             1. Not suitable for heavy computational tasks.
    2. Best suited for streaming huge amounts of data        2. Since Node.js is single-threaded, CPU intensive 
    and I/O intensive operations.                            tasks are not its strong suit.

   What does Event driven Programming means ?
-> An event-driven programming approach uses events to trigger various functions Execution. An event can 
   be anything, such as typing a key or clicking a mouse button. A callback function is already
   registered with the element executes whenever an event is triggered. 

   What is EventEmiiter in Node.js ?
-> EventEmitter is a class that allows to emit custom events synchronously or asynchronously, and 
   add handlers for those events.  

   What are the two types of API function in Node.js ?
-> The two types of API functions in Node.js are:
   Asynchronous, non-blocking functions
   Synchronous, blocking functions

   What is REPL in context of Node ?
-> REPL stands for Read Eval Print Loop, It is an easy-to-use command-line tool, used for processing 
   Node.js expressions. 
   
   Read - Reads user's input, parse the input into JavaScript data-structure and stores in
   memory.
   Eval - Takes the data structure and evaluates the expression
   Print - Prints the result
   Loop - Loops the above command until user press ctrl-c twice.

   What do you mean by Package.json ?
-> Package.json file contains descriptive and functional metadata about a project, such as a name, 
   version, and dependencies.

   Following are the attributes of Package.json
   1. name         - Name of the package
   2. version      - The version field is very important for any published package, and required before 
                     publishing. It defines the current version of the software. 
   3. description  - Description of the package
   4. license      - The license field lets us define what license applies to the code the package.json is 
                     describing.
                     The value of this field is usually "MIT" or "ISC".
   4. homepage     - Homepage of the package
   5. author       - Author of the package or name of the contributors to the package
   6. contributors - Name of the contributors to the package
   7. dependencies - It defines list of dependencies which are used in our project.
                     The dependency field is an object with package names as keys, and a version or 
                     version range as a value.
                     we can use npm install --production to only install what is listed in the dependency 
                     field of package.json.
                     To install a package from npm as a devDependency, you can run npm install --save-dev <package>.
   8. devdependencies - It is similar to the dependencies field but it contains only those packages which 
                        are only needed during development, and aren't needed in production.
   8. repository   - Repository type and url of the package
   9. main         - It defines the entry point into our project or define the filename from which project 
                     execution starts.
   10. keywords    - The keywords field is an array of strings, This field is indexed by the NPM registry to 
                     help find packages when someone searches for them.


   What do you mean by Blocking code ?
-> Blocking code is the code that blocks the Control flow execution.
   If application has to wait for some I/O operation in order to complete its execution any further then
   the code responsible for waiting is known as blocking code.   

   What is purpose of Buffer class in Node ?
-> Buffer class is a global class and can be accessed in application without importing buffer module.
   Buffer class provides instances to store raw data. A Buffer cannot be resized.

   What is Piping in Node.js ?
-> Piping is a mechanism to connect output of one stream to another stream. It is normally used to
   get data from one stream and to pass output of that stream to another stream. There is no limit on
   piping operations.   
   The piping is to simplify our operation or reading from one file and writing to another file.

   What are the different core modules we have in Node.js ?
-> These are the different core modules in Node.js 
   1. http
   2. fs
   3. path
   4. os
   5. url   
  
   Which module is used for file based operations?
-> fs module is used for file based operations.
   var fs = require("fs")

   Which module is used for buffer based operations?
-> buffer module is used for buffer based operations.
   var buffer = require("buffer")

   Which module is used for web based operations?
-> http module is used for web based operations.
   var http = require("http")

   How would you use a URL module in Node.js ?
-> The URL module in Node.js provides various utilities for URL resolution and parsing. It is a built-in module 
   that helps split up the web address into a readable format.

   What are streams?
-> Streams are objects that let you read data from a source or write data to a destination in continous
   fashion.   
   
   How many types of streams are present in Node.
-> In Node.js, there are four types of streams.
   Readable  - Stream which is used for read operation.
   Writable  - Stream which is used for write operation.
   Duplex    - Stream which can be used for both read and write operation.
   Transform - A type of duplex stream where the output is computed based on input.

   What are the differnet Events fired by streams in Node.js ?
-> Each type of Stream is an EventEmitter instance and throws several events at different instance
   of times. For example, some of the commonly used events are:
   
   data   - This event is fired when there is data is available to read.
   end    - This event is fired when there is no more data to read.
   error  - This event is fired when there is any error receiving or writing data.
   finish - This event is fired when all data has been flushed to underlying system.

   What is the purpose of __dirname variable ?
-> The __dirname represents the name of the directory that the currently executing script resides in.

   What is the purpose of __filename variable ?
-> The __filename represents the filename of the code being executed. This is the resolved absolute
   path of this code file.

   What do you mean by Template Engines in Node.js ?
-> Template Engine is a mechanism that allows us to show dynamic content in the web pages at 
   runntime.
   A template engine facilitates you to use static template files in your applications. At runtime, it 
   replaces variables in a template file with actual values, and transforms the template into an HTML 
   file sent to the client.

    Different Template Engines we have in Node.js 
    1. Pug 
    2. Hbs
    3. Ejs
    4. Jade
    5. Blade   

   What is the purpose of module.exports        
-> The purpose of module.exports is to exports from given file so that other files are allowed to access the 
   exported file.
   
   What do you mean by npm ?
-> NPM stands for Node Package Manager, It is the package manager responsible for managing all the 
   packages and modules for Node.js.

   What are modules in Node.js ?
-> Modules in Node.js allow you to break up your code into separate files.

   What is the Express.js package in Node.js ?
-> Express is a flexible Node.js web application framework that provides a wide set of features to develop 
   both web and mobile applications faster.

   What is Middleware in Node.js?
-> Middleware functions that are used to modify req and res objects.
   Middleware functions are functions that have access to the request object (req), the 
   response object (res), and the next middleware function in the application’s request-response
   cycle.

   What is express.json()?
-> The express.json() function is a built-in middleware function in Express. It parses 
   incoming requests with JSON payloads and is based on body-parser.
   
   What do you mean by Control flow function call ?
-> The control flow function is a piece of code that runs in between several asynchronous function calls.   

   How does Control flow manage the function calls ?
-> The Control flow manage the function calls
   1. Control the order of execution
   2. Collect data
   3. Limit concurrency
   4. Call the next step in a program    

   What is the difference between fork and spawn methods in Node.js ?
->                          fork                        |                 spawn 
  -------------------------------------------------------------------------------------------------------- 
  1. It is a particular case of spawn that generates      1. Spawn() launches a new process with the available 
     a new instance of the V8 Engine.                        set of commands.

   What are the different type of HTTP request ?
-> HTTP defines a set of request methods used to perform desired actions. the request methods include
   1. GET - Used to retrieve the data.
   2. POST - Generally used to Post data.
   3. PUT - Used to update entire resource data. 
   4. DELETE - Used to delete the predetermined resource.
   5. PATCH - Used to partially update the resource data.

   Why we use res.status?
-> The res.status() function set the HTTP status for the response. 
   Types of HTTP Response --
   Informational responses (100–199) -- This response indicates that the client should continue the request or ignore the response if the request is already finished.
   Redirection messages (300–399) -- The request has more than one possible response. 
   Successful responses (200–299)
   Client error responses (400–499)
   Server error responses (500–599)

   What is the difference between PUT and PATCH http Method ?
-> PUT method is used for modifying entirely data when the clients sends entire resource data.
   PATCH methos is used for modifying partial data when the clients sends partial resource data.

   What do you mean by Authorization in Node.js ?
-> Authorization is the process of verifing what users have access To.
   Authorization is a process by which a server determines if the client has permission to use a resource
   or access a file.

   What do you mean by Authentication in Node.js ?
-> Authentication is the process of verifing the user.

   What do you mean by Cors?
-> CORS Stands for Cross Origin Resource Sharing.
   It allows us to relax the security applied to an API.

   What do you mean by Cookie ?
-> Cookies are the data stored in the user's browser for quick access. 
   For example, whenever we log in to any website, the server returns the access token, which can be stored 
   in the browser's cookie with the expiry time.   
   Cookies are sent to client with a server request and stored on the client side. Every time the user loads
   the website back, this cookie is sent with the request. This helps us keep track of the user's actions.

   What do you mean by Partials in Node.js ?
-> Partials are basically just views that are designed to be used from other views. They are 
   particularly useful for reusing the same markup between different views.

   What do you mean by routes in node.js ?
-> Rooutes are the different urls of the application.

   What do you mean by Routing in Node.js ?
-> Routing refers to how an application's endpoints (URIs) respond to client requests.   
   Routing allows targeting different routes or different URLs on our page.

   What is RXJS ?
-> RxJS (Reactive Extensions for JavaScript) is a library for dealing with asynchronous operations. 
   observables that makes it easier to compose asynchronous or callback-based code.

   What are the advantages of using Promises instead of callbacks ?
-> 
   The advantages of using Promises instead of Callbacks - 
   1. Control flow of asynchronous logic is more structured and more specified.
   2. Improved Readibility.
   3. Coupling is low.

   What is Sequelize ?
-> Sequelize is a promise-based Node. js ORM for Postgres, MySQL, MariaDB, SQLite and
   Microsoft SQL Server. 
   Sequelize is an open-source Node. js module that enables JavaScript developers to work
   with relational databases more easily.

   What is ORM ?
-> ORM stands for Object-Relational Mapping (ORM) is a programming technique for Mapping
   data between relational databases and object oriented programming languages such as Java,
   C#.

   What is the Advantage of ORM ?
-> You won't have to write any other low-level data access code.

   What is Dialect ?
-> Dialect classes are used to generate SQL queries. The available Dialect classes are:
   sql and Postgre etc.

   What is Idle in Pool ?
-> It Specifies after how time of no use of object A client, server, or proxy MAY close the
   transport connection.

   What is Pool in Sequelize ?
-> The pool is the collection of these saved, reusable connections Objects.

   What is Acquire in Sequelize ?
-> It Specifies in How much time Pool object will be available for Making Connections or Make
   Connection with the Database.

   What do you by mongoose ?
-> Mongoose is a Node. js-based Object Data Modeling (ODM) library for MongoDB.

   What do you mean by Schema in Node.js ?
-> A schema is a JSON object that defines the structure and contents of your data. 

   What do you mean by Model in Node.js ?
-> Models are constructors compiled from Schema definitions. An instance of a model is called a 
   document. Models are responsible for creating and reading documents from the underlying MongoDB database.

   Which database is more popularly used with Node.js ?
-> Mongodb is the most popular used database with node.js. It is NOSQL cross platform document oriented 
   database that provides high performance, high availability and easy scalibility.


   

   
  
