   What do you mean by Node.js ?
-> Node.js is a web application framework built on Google Chrome's JavaScript Engine (V8Engine).
   Node.js comes with runtime environment on which a Javascript based script can be interpreted and
   executed.
   This runtime allows to execute a JavaScript code on any machine outside a browser. Because of this runtime 
   of Node.js, JavaScript is now can be executedon server as well.

   Node.js = Runtime Environment + JavaScript Library

   What are the benefits of using Node.js ?
-> These are the few benefits of using Node.js 

   1> Single threaded and highly scalable -- Node.js uses a single threaded model with event looping. Event 
   mechanism helps server to respond in a non-blocking ways and makes server highly scalable as opposed to 
   traditional servers which create limited threads to handle requests. Node.js uses a single threaded program 
   and same program can services much larger number of requests than traditional server like Apache HTTP Server.

   2> Aynchronous and Event Driven - All APIs of Node.js library are asynchronous that is non blocking. It 
   essentially means a Node.js based server never waits for a API to return data. Server moves to next API 
   after calling it and a notification mechanism of Events of Node.js helps server to get response from the 
   previous API call.

   3> Very Fast - Being built on Google Chrome's V8 JavaScript Engine, Node.js library is very fast
   in code execution.

   4> No Buffering - Node.js applications never buffer any data. These applications simply output
   the data in chunks.


   What is REPL in context of Node ?
-> REPL stands for Read Eval Print Loop and it represents a computer environment like a window
   console or unix/linux shell where a command is entered and system responds with an output.
   
   Read - Reads user's input, parse the input into JavaScript data-structure and stores in
   memory.
   Eval - Takes and evaluates the data structure
   Print - Prints the result
   Loop - Loops the above command until user press ctrl-c twice.

   What do you mean by Package.json ?
-> Package.json is present in the root directory of any Node application/module and is used to define
   the properties of a package.  

   Following are the attributes of Package.json
   name - name of the package
   version - version of the package
   description - description of the package
   homepage - homepage of the package
   author - author of the package
   contributors - name of the contributors to the package
   dependencies - list of dependencies. npm automatically installs all the dependencies
   mentioned here in the node_module folder of the package.
   repository - repository type and url of the package
   main - entry point of the package
   keywords - keywords


   What do you mean by Blocking code ?
-> Blocking code is the code that blocks the Control flow execution.
   If application has to wait for some I/O operation in order to complete its execution any further then
   the code responsible for waiting is known as blocking code.
    
   How Node prevents blocking code ?
-> By providing callback function. Callback function gets called whenever corresponding event
   triggered.   

   What is purpose of Buffer class in Node?
-> Buffer class is a global class and can be accessed in application without importing buffer module.
   A Buffer is a kind of an array of integers and corresponds to a raw memory allocation outside the
   V8 heap. A Buffer cannot be resized.

   above  

   What is Piping in Node.js ?
-> Piping is a mechanism to connect output of one stream to another stream. It is normally used to
   get data from one stream and to pass output of that stream to another stream. There is no limit on
   piping operations.   
   The piping is to simplify our operation or reading from one file and writing to another file
  
   Which module is used for file based operations?
-> fs module is used for file based operations.
   var fs = require("fs")

   Which module is used for buffer based operations?
-> buffer module is used for buffer based operations.
   var buffer = require("buffer")


   Which module is used for web based operations?
-> http module is used for web based operations.
   var http = require("http")

   What are streams?
-> Streams are objects that let you read data from a source or write data to a destination in continous
   fashion.   
   
   How many types of streams are present in Node.
-> In Node.js, there are four types of streams.
   Readable - Stream which is used for read operation.
   Writable - Stream which is used for write operation.
   Duplex - Stream which can be used for both read and write operation.
   Transform - A type of duplex stream where the output is computed based on input.

   What are the differnet Events fired by streams in Node.js ?
-> Each type of Stream is an EventEmitter instance and throws several events at different instance
   of times. For example, some of the commonly used events are:
   
   data - This event is fired when there is data is available to read.
   end - This event is fired when there is no more data to read.
   error - This event is fired when there is any error rBeceiving or writing data.
   finish - This event is fired when all data has been flushed to underlying system.

   What is the purpose of __dirname variable ?
-> The __dirname represents the name of the directory that the currently executing script resides in.

   What is the purpose of __filename variable ?
-> The __filename represents the filename of the code being executed. This is the resolved absolute
   path of this code file.   
   
   How does Node.js works ?
->
                                          |---> Blocking Operations ---> Thread Pool --->   External Resources
                                          |<---                     <---             <---      Database
                                          |                                                  File System
                                          |                                                  Computation
                                          |
   Request ->  Event Queue -> Event Loop -->
                           <-            <--
                                          |
                                          |
                                          |--->
                                           <--- Non Blocking Operations


   Clients send requests to the webserver to interact with the web application. Requests can be non-blocking or 
   blocking: like Querying for data, Deleting data, Updating the data.

   Node.js retrieves the incoming requests and adds those to the Event Queue.

   The requests are then passed one-by-one through the Event Loop. It checks if the requests are simple enough 
   not to require any external resources.

   Then The Event Loop processes simple requests (non-blocking operations), such as I/O Polling, and returns the 
   responses to the corresponding clients.

   If the request is Blocking Operation then a single thread from the Thread Pool is assigned to a single complex 
   request. This thread is responsible for completing a particular blocking request by accessing external 
   resources, such as computation, database, file system, etc.

   Once the task is carried out completely, the response is sent to the Event Loop that sends that response 
   back to the client.

   What are the advantages of using Promises instead of callbacks ?
-> The advantages of using Promises instead of Callbacks - 
   1. Control flow of asynchronous logic is more structured and more specified.
   2. Improved Readibility.
   3. Coupling is low.

   If Node.js is single threaded, then how does it handle concurrency ?
-> 
  
   Why is node.js single threaded, then how does it handle concurrency ?
-> 

   What do you mean by Node Package Manager ?
-> NPM stands for Node Package Manager, responsible for managing all the packages and modules for Node.js.

   Node Package Manager provides two main functionalities:

   Provides online repositories for node.js packages/modules, which are searchable on search.nodejs.org
   Provides command-line utility to install Node.js packages and also manages Node.js versions and dependencies.

   What are modules in Node.js ?
-> Modules are like JavaScript libraries that can be used in a Node.js application to include a set of 
   functions. To include a module in a Node.js application, use the require() function with the parentheses 
   containing the module's name.

   What is the purpose of module.exports        
-> The purpose of module.exports is to exports from given file so that other files are allowed to access the 
   exported file.

   Which database is more popularly used with Node.js ?
-> Mongodb is the most popular used database with node.js. It is NOSQL cross platform document oriented 
   database that provides high performance, high availability and easy scalibility.

   What are the pros and cons of Node.js ?
->                               Node.js Pros             |                   Node.js Cons      

    1. Fast processing and an event-based model.             1. Not suitable for heavy computational tasks.
    2. Uses JavaScript, which is well-known amongst          2. Using callback is complex since you end up with 
    developers.                                              several nested callbacks.
    3. Node Package Manager has over 50,000 packages         3. Dealing with relational databases is not a good
    that provide the functionality to an application.        option for Node.js.
    4. Best suited for streaming huge amounts of data        4. Since Node.js is single-threaded, CPU intensive 
    and I/O intensive operations.                            tasks are not its strong suit.

   What is the difference between process.nextTick() and setImmediate ?
->

   What does Event driven Programming means ?
-> An event-driven programming approach uses events to trigger various functions. An event can be anything, 
   such as typing a key or clicking a mouse button. A call-back function is already registered with the element 
   executes whenever an event is triggered. 

   What is EventEmiiter in Node.js ?
-> EventEmitter is a class that holds all the objects that can emit events.  
   Whenever an object from the EventEmitter class throws an event, all attached functions are called upon 
   synchronously.

   What are the two types of API function in Node.js ?
-> The two types of API functions in Node.js are:
   Asynchronous, non-blocking functions
   Synchronous, blocking functions

   How would you use a URL module in Node.js ?
-> The URL module in Node.js provides various utilities for URL resolution and parsing. It is a built-in module 
   that helps split up the web address into a readable format.   

   What is the Express.js package in Node.js ?
-> Express is a flexible Node.js web application framework that provides a wide set of features to develop 
   both web and mobile applications.

   What do you mean by Control flow function call ?
-> The control flow function is a piece of code that runs in between several asynchronous function calls.   

   How does Control flow manage the function calls ?
-> The Control flow manage the function calls
   1. Control the order of execution
   2. Collect data
   3. Limit concurrency
   4. Call the next step in a program    

   What is the difference between fork and spawn methods in Node.js ?
->                          fork                        |                 spawn 
  -------------------------------------------------------------------------------------------------------- 
  1. It is a particular case of spawn that generates      1. Spawn() launches a new process with the available 
     a new instance of the V8 Engine.                        set of commands.

   What are the different type of HTTP request ?
-> HTTP defines a set of request methods used to perform desired actions. the request methods include
   1. GET - Used to retrieve the data
   2. POST - Generally used to Post data
   3. PUT - Used to update the data 
   4. DELETE - Used to delete the predetermined resource

   How does Node.js handle child threads ?
->    



   


   What is Node.js ?
   Node.js is an Openserver Enviroment that allows us to run JavaSCript on the Server.

   What is Sequelize ?
   Sequelize is a promise-based Node. js ORM for Postgres, MySQL, MariaDB, SQLite and
   Microsoft SQL Server. 
   Sequelize is an open-source Node. js module that enables JavaScript developers to work
   with relational databases more easily.

   What is ORM ?
   ORM stands for Object-Relational Mapping (ORM) is a programming technique for Mapping
   data between relational databases and object oriented programming languages such as Java,
   C#.

   What is the Advantage of ORM ?
   You won't have to write any other low-level data access code.

   What is Dialect ?
   Dialect classes are used to generate SQL queries. The available Dialect classes are:
   sql and Postgre etc.

   What is Idle in Pool ?
   It Specifies after how time of no use of object A client, server, or proxy MAY close the
   transport connection.

   What is Pool in Sequelize ?
   The pool is the collection of these saved, reusable connections Objects.

   What is Acquire in Sequelize ?
   It Specifies in How much time Pool object will be available for Making Connections or Make
   Connection with the Database.

   What do you mean by Cors?
   CORS Stands for Cross Origin Resource Sharing.
   It allows us to relax the security applied to an API.

   what is Express?
   Express is a Node.js web application framework that provides a robust set of features for
   web and mobile applications.

   What is Middleware in Node.js?
   Middle functions that are used to modify req and res objects.
   Middleware functions are functions that have access to the request object (req), the 
   response object (res), and the next middleware function in the application’s request-response
   cycle.

   What is express.json()?
   The express.json() function is a built-in middleware function in Express. It parses 
   incoming requests with JSON payloads and is based on body-parser.

   What is RXJS ?
   RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using 
   observables that makes it easier to compose asynchronous or callback-based code.

   Why we use res.status?
   The res.status() function set the HTTP status for the response. 
   Types of HTTP Response --
   Informational responses (100–199) -- This response indicates that the client should continue the request or ignore the response if the request is already finished.
   Successful responses (200–299)
   Redirection messages (300–399) -- The request has more than one possible response. 
   Client error responses (400–499)
   Server error responses (500–599)
   Successful responses (200–299)
   Redirection messages (300–399)
   Client error responses (400–499)
   Server error responses (500–599)

   What are the differnet Http Verbs?
   PUT,POST,GET,DELETE,UPDATE

