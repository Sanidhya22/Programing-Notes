                                             Spring 
                           -----------------------------------------------

• What is the Spring Framewok ?
  Spring is a powerful lightweight application development framework used for Java Enterprise
  Edition (JEE). 
  It is a Dependency Injection frameWork to make Java application loosely coupled.
  It makes the development of JEE application easy.

• How Spring simplifies application development in Java ?
  It simplifies development by handling common infrastructure tasks like:

  1. Dependency injection: Managing dependencies between objects, reducing boilerplate code and promoting 
     loose coupling.
  2. Data access: Simplifying interaction with various databases and technologies like JDBC, JPA, and 
     NoSQL databases.
  3. Web development: Providing frameworks like Spring MVC and Spring WebFlux for building web 
     applications and REST APIs.
  4. Security: Offering Spring Security to implement authentication, authorization, and other security 
     features.
  5. Transaction management: Handling database transactions automatically to ensure data consistency.
  6. Messaging and integration: Enabling communication with other systems and message brokers.
  7. Testing: Facilitating unit, integration, and end-to-end testing with tools like Spring Test and 
     WebTestClient.   

• What do you mean Dependency Injection ?
  Dependency Injection is a design pattern in which a class requests dependencies from
  external sources rather than creating them.
  In Dependency Injection class object receives other objects on which it depends on.

• What are the different layers during application devlopment ?
  There are Three main layers during application development -- 
  1. UI Layers -- Deals With Accepting the Client request for a service.
  2. Business / Service Layer -- Deals with the business logic implementation.
  3. Data Access Layer  -- Deals with making connection with the database and performing 
     database operations.

• What are the core Spring Modules ?
  The core spring modules are as follow -
  1. Core
  2. Beans
  3. Context
  4. SPEL(Spring Expression Language) 


• What do you mean by Spring IOC Conatiner ?
  Spring IoC Container is the core of Spring Framework. It creates the objects, configures
  and assembles their dependencies, manages their entire life cycle from the creation of
  objects till the dependency injection of objects.

  It Requires two things
  1. Bean Objects  
  2. Configuration File

  class Address{
       String street;
       String city;
       String state;
       String Country;
  }

  class Student{
      int id ;
      String Name;
      Address address;
  }

  Note ---
  Here IOC Container is Responsible for Creating Object of Address Class and and Providing it 
  to the Student class during creation of Student class Object.

  There are Two ways through which Dependency can be done by IOC Container

  1. Using Setter Injection --
     Setter injection is a dependency injection in which the spring framework injects the dependency object 
     using the setter method.

  2. Using Constructor Injection --
     Constructor injection is a dependency injection in which the spring framework injects the dependency object 
     using the Constructor.

• What is configuration file ?
  Configuration file is XML file which provides meta information for application configuration
  It contains beans and its Dependency Classes and other miscellaneous configuration.  
  Spring bean configuration file contains spring bean configurations, dependent value configurations, 
  and other miscellaneous configurations. 
  Any name can be given to Spring Bean configuration file with .xml extension.

• What is bean in Spring ?
  A bean is an object that is instantiated, assembled, and managed by a Spring IoC container.

• What is bean class in Spring and what is the use of it ?
  JavaBeans are classes that encapsulate many objects into a single object (the bean).
  They are used to encapsulate one or more objects into a single standardized object (the bean).

• What do you mean by ApplicationContext in Spring ? 
  ApplicationContext is an interface for providing configuration information to an 
  application. There are multiple classes provided by springframework that implements this
  interface and helps us use configuration information in applications.Its Object Provides us
  IOC Container.

  Note - 
  We cannot create objects of ApplicationContext because It is an Interface so for creating 
  objects we have to use ApplicationContext Implementing Classes.
  Some Classes Implementing ApplicationContext Interface 

  1. AnnotationConfigApplicationContext - AnnotationConfigApplicationContext is a standalone
     application context which accepts annotated classes as input.
  2. FileSystemXMLApplicationContext - It searches for the XML config file from the File
     System.
  3. ClasspathXMLApplicationContext - It searches for the XML config file from the classpath.

• What are the lifecycle methods in Spring Bean ?
  Life Cycle Methods of Spring Bean

  1. public void init() - init() is a method which is to be called on the bean
     immediately upon instantiation.
     It is called often during Initialization, Loading, Connecting database, Webservice.
     We can change the name of the method but singnature remains same.

  2. public void destroy() - destroy() is a method which is to be called just before
     bean is removed from the Container.
     It is often called before object destruction and used as a cleanup code.

  Life Cycle Steps - 
  1. Object of bean is created by the  IOC Container.
  2. Using Setter Injection or Constructor Injection value of the object property is set.
  3. Init method is invoked.
  4. Use the bean.
  5. Destroy method is invoked.

• What do you mean by AutoWiring in Spring ?
  AutoWiring is a feature of Spring FrameWork in which spring Container inject the dependencies automatically. 
  AutoWiring can not be used to inject Primitive and Collection values. It works With References only.  

  Advanatges of AutoWiring
  1. It is Automatic.
  2. It Requires Less Code.   

  AutoWiring can be done in two ways 
  1. By Using XML
  2. By Using Annotations

  There are four types of AutoWiring Modes --
  1. No Mode  - No AutoWiring
  2. ByName -  AutoWiring ByName(Setter Injection)
  3. ByType - AutoWiring By DataType(Setter Injection)
  4. Constructor - AutoWiring based on Constructor Call(Constructor Injection)  
  5. Autodetect - It is now Deprecated Mode.
   
• What do you mean by AutoWired Annotation ?
  This Annotation is used for Automatic Injection of Dependencies by Sping IOC Conatiner for AutoWiring.
  It can be used with the variables, setters, Constructors.

• What do you mean by Qualifier Annotation ?  
  The @Qualifier annotation is used to resolve the autowiring conflict, when there are multiple beans of same 
  type.

• What are the different types of bean Scopes in Spring ?
  These are the different types of Bean scopes in Spring
  1. Singleton - 
     the Spring IoC container creates exactly one instance of the object and This single instance is 
     stored in a cache of such singleton beans, and for all subsequent requests and references for that 
     named bean return the cached object.

  2. Prototype - 
     The Spring IoC container creates a new bean instance of the object every time a request for that 
     specific bean is made.

  3. Request - 
     The Spring IOC container creates an instance of the bean class for every HTTP request.
     The instance exists only for that specific HTTP request.

  4. Session -
     The Spring IOC container creates an instance of the bean class and keeps the instance 
     in the server's memory for the full HTTP session.

 5. GlobalSession -
    The Spring IOC container creates an instance of the bean class and keeps the instance 
    for the full global HTTP session.
      

• What do you mean by Spring Expression Language ?
  The Spring Expression Language (SpEL for short) is a powerful expression language that 
  supports querying and manipulating an object at runtime.
  SPEL supports parsing and executing Expression with the help of @Value Annotation.
 
  e.g @Value("#{temp}")

   Features of SPEL
  ----------------------------------------
  It can be used to solve expression in the value Annotation. 
  Inside SPEL expression we can use variables, methods, classes. 

• What do you mean by Spring Security ?
  Spring Security is a powerful and highly customizable authentication and access-control framework.
  Spring Security is a framework that focuses on providing both authentication and authorization to Java 
  applications.

• What do you mean by Spring MVC ?
  Spring MVC Framework follows the Model-View-Controller architectural design pattern. 
  The terms model, view, and controller are as follows:

  Model: The Model encapsulates the application data.
  View: View renders the model data and generates HTML output that the client’s browser can interpret.
  Controller: The Controller processes the user requests and passes them to the view for rendering. 

• What do you mean by Spring JDBC ?
  Spring JDBC is a Powerful mechanism to connect to the database and Execute SQL Queries.
  Spring JDBC is an API to perform Operation with the Database. 

  Java Program  <---->  Spring JDBC Module(JDBC Template)  <----> Database

  Problems with the Traditional Way of Writing JDBC Code
  1. We need to write a lot of Code.
  2. Exception handling Problem(Checked Exception).
  3. Repeating of lot of Codes.  

• What do you mean by Spring ORM ?
  Spring-ORM is a technique or a Design Pattern used to access a relational database from an object-oriented 
  language. 
  Spring ORM provides Hibernate Template using which we can Perform Operations like Save , Update, Insert, 
  Get, GetAll.
 
  Advantages of Spring ORM 
  1. Less Coding is required.
  2. Easy to test.
  3. Better Exception Handling.
  4. Intregated Transaction Management.

• How to work with Spring ORM ?
  There are Follwing Steps for working with Spring ORM -
  1. We have to create a Dao file.
  2. Then we have to create Hibernate Template Reference and pass that reference to The
     Dao file.
  3. For the creation of Hibernate Template we need Session Factory Interface reference
     whose Object can be created by the LocalSessionFactoryBean Class.
  4. For the creation of LocalSessionFactoryBean object we need three resources
     DataSource, Hibernate Properties, Annotated Classes.
  5. For DataSource class reference we need these three properties URL, Username, Password.   

• What do you mean by Row Mapper ?
  Row Mapper is an interface which allows to map a row of the ResultSet with the instance of
  the user defined class. 
  it Iterates the ResultSet internally and adds it into the Collection.

  Selecting Data using Spring JDBC
  1. public T queryForObject(String sql,RowMapper<T> rowMapper,Object args) -
     It is used for Single Record Fetching from the Database.
  2. public List<T> query(String args,RowMapper<T> rowMapper) - 
     It is used for Fetching Multiple Records from the Database 

  Note -
  Here sql is the select query and rowMapper Converts ResultSet into Objects.
  ResultSet Object ---> Row Mapper ---> Class Objects

      








       

